@import '~styles/colors';
@import '~styles/helpers';
@import '~styles/variables';


$button-group-margin: ($default-gap / 4);

$button-border-width: $default-border;
$button-border-radius: $default-border-radius;
$button-padding: (0.75 * $default-gap - $default-border) (1.5 * $default-gap - $default-border);
$button-small-padding: (0.25 * $default-gap - $default-border / 2) (1.5 * $default-gap - $default-border);

$button-active-displacement: 2px;

$button-color: $color-text-lighter;
$button-background-color: $color-blue;
$button-danger-background-color: $color-dark-red;
$button-secondary-background-color: $color-text-grey;

$button-font-family: $font-family;
$button-font-size: 0.875rem;
$button-font-weight: 500;
$button-line-height: 1.25rem;

$button-disabled-opacity: $disabled-opacity;

$button-loading-border-width: (2 * $default-border);
$button-loading-gap: ($default-gap / 2);
$button-loading-size: $button-line-height;
$button-loading-color: #ffffff;

.group {
	display: flex;
	flex-direction: row;
	align-items: center;
	flex-wrap: wrap;
	margin: -$button-group-margin;

	.button {
		margin: $button-group-margin;
		flex-grow: 1;
	}
}

.button {
	@mixin state($color, $alpha-color: rgba($color, 0.5)) {
		border-color: $color;
		background: $color;

		&.button--outline,
		&.button--nude {
			color: $color;

			&.button--loading::after {
					border-color: $color $alpha-color $alpha-color $alpha-color;
			}
		}
	}

	position: relative;
	display: flex;
	flex-direction: row;
	justify-content: center;

	box-sizing: border-box;
	border: $button-border-width solid;
	border-radius: $button-border-radius;
	padding: $button-padding;

	color: var(--font-color, $button-color);

	font-family: $button-font-family;
	font-size: $button-font-size;
	font-weight: $button-font-weight;
	line-height: $button-line-height;
	white-space: nowrap;
	text-decoration: none;

	cursor: pointer;
	transition: color $default-time-animation,
		background-color $default-time-animation,
		border-color $default-time-animation,
		transform $default-time-animation / 2;
	user-select: none;

	@include state(var(--color, $button-background-color), transparent);
	@include pressable-button($button-active-displacement, $button-border-width);

	&:focus {
		box-shadow: 0 0 5px rgba(#000000, 0.5);
	}

	&--danger {
		color: $button-color;
		@include state($button-danger-background-color);
	}

	&--secondary {
		color: $button-color;
		@include state($button-secondary-background-color);
	}

	&--outline {
		background: none;
	}

	&--nude {
		background: none;
		border-color: transparent;

		&:focus {
			box-shadow: none;
		}
	}

	&--stack {
		width: 100%;
	}

	&--small {
		padding: $button-small-padding;
	}

	&--disabled {
		opacity: $button-disabled-opacity;
		cursor: not-allowed;
	}

	&--loading {
		&::after {
			content: "";

			display: inline-flex;
			box-sizing: border-box;
			position: relative;
			left: $button-loading-gap;

			border: $button-loading-border-width solid;
			border-radius: 50%;
			width: $button-line-height;
			height: $button-line-height;

			border-color: var(--font-color, $button-loading-color) transparent transparent transparent;
			animation: button-loading-rotation 1s linear infinite;
		}

		&.button--danger::after,
		&.button--secondary::after {
			border-color: $button-loading-color
				rgba($button-loading-color, 0.5)
				rgba($button-loading-color, 0.5)
				rgba($button-loading-color, 0.5);
		}
	}
}

@keyframes button-loading-rotation {
  0% {
		transform: rotate(0);
	}

  100% {
		transform: rotate(360deg);
	}
}
